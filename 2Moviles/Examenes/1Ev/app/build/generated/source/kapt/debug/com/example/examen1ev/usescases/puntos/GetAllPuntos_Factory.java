// Generated by Dagger (https://dagger.dev).
package com.example.examen1ev.usescases.puntos;

import com.example.examen1ev.data.PuntosRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetAllPuntos_Factory implements Factory<GetAllPuntos> {
  private final Provider<PuntosRepository> puntosProvider;

  public GetAllPuntos_Factory(Provider<PuntosRepository> puntosProvider) {
    this.puntosProvider = puntosProvider;
  }

  @Override
  public GetAllPuntos get() {
    return newInstance(puntosProvider.get());
  }

  public static GetAllPuntos_Factory create(Provider<PuntosRepository> puntosProvider) {
    return new GetAllPuntos_Factory(puntosProvider);
  }

  public static GetAllPuntos newInstance(PuntosRepository puntos) {
    return new GetAllPuntos(puntos);
  }
}
