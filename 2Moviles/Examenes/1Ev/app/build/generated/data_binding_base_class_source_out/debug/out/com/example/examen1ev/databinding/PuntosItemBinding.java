// Generated by view binder compiler. Do not edit!
package com.example.examen1ev.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.examen1ev.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PuntosItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnPuntosVer;

  @NonNull
  public final TextView tvIdPuntos;

  @NonNull
  public final TextView tvLatitudPuntos;

  @NonNull
  public final TextView tvLongitudPuntos;

  private PuntosItemBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnPuntosVer,
      @NonNull TextView tvIdPuntos, @NonNull TextView tvLatitudPuntos,
      @NonNull TextView tvLongitudPuntos) {
    this.rootView = rootView;
    this.btnPuntosVer = btnPuntosVer;
    this.tvIdPuntos = tvIdPuntos;
    this.tvLatitudPuntos = tvLatitudPuntos;
    this.tvLongitudPuntos = tvLongitudPuntos;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PuntosItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PuntosItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.puntos_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PuntosItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPuntosVer;
      Button btnPuntosVer = ViewBindings.findChildViewById(rootView, id);
      if (btnPuntosVer == null) {
        break missingId;
      }

      id = R.id.tvIdPuntos;
      TextView tvIdPuntos = ViewBindings.findChildViewById(rootView, id);
      if (tvIdPuntos == null) {
        break missingId;
      }

      id = R.id.tvLatitudPuntos;
      TextView tvLatitudPuntos = ViewBindings.findChildViewById(rootView, id);
      if (tvLatitudPuntos == null) {
        break missingId;
      }

      id = R.id.tvLongitudPuntos;
      TextView tvLongitudPuntos = ViewBindings.findChildViewById(rootView, id);
      if (tvLongitudPuntos == null) {
        break missingId;
      }

      return new PuntosItemBinding((ConstraintLayout) rootView, btnPuntosVer, tvIdPuntos,
          tvLatitudPuntos, tvLongitudPuntos);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
